task: fit
package: torch

logger:
  name: eniat
  logging_dir: ./
  type: StateLogger
  level: 10
  unit: epoch
  json: True

data:
  rand:
    path: ./test/model_torch.py
    cls: RandDataset
    cache: False
    transform:
    options:
      total: 92333
      _hidden: 32
      _gt: 1
  rand2:
    path: ./test/model_torch.py
    cls: RandDataset
    cache: False
    transform:
    options:
      total: 1000
      _hidden: 32
      _gt: 1

learner:
  cls: torch.SupervisedLearner
  path:
  model:
    cls: SimpleLinear
    path: ./test/model_torch.py
    options:
      __args__: [12, 32, 4096, 1]

trainer:
  data_label: rand
  loss:
    cls: torch.nn.MSELoss
    path:
    options:
  optimizer:
    cls: torch.optim.SGD
    path:
    options:
      lr: 0.0001
  scheduler:
    cls: eniat.torch.scheduler.LinearDecayWithWarmupScheduler
    path:
    options:
      base_lr: 0.001

  scheme:
    max_step: 100
    seed: 12345
    unit: step
    warmup_steps: 20
    warmup_unit: step
    save_interval: 2
    update_interval: 2
  loader:
    batch_size: 1000
  env:
    type: DDP
    device_id: 0
    dist:
      local_size: 2
      world_size: 2
      backend: gloo
      optimizer: zero

grader:
  data_label: rand2
  scheme:
    metrics:
      - {cls: torcheval.metrics.functional.mean_squared_error}
    unit: epoch
    eval_interval: 2
  loader:
    batch_size: 100
    shuffle: False
    num_workers: 0
    pin_memory: False
  env:
    type: keep
